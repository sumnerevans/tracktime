stages:
  - test
  - build
  - deploy
  - verify
  - release

lint:
  image: python:3.8-alpine
  stage: test
  before_script:
    - apk add gcc musl-dev
    - pip install -e .
    - pip install flake8 flake8-pep3101 mypy
  script:
    - python setup.py check -mrs
    - flake8
    - mypy tracktime

test:
  image: python:3.8-alpine
  stage: test
  before_script:
    - pip install -e .
    - pip install pytest pytest-cov
  script:
    - pytest
  artifacts:
    paths:
      - htmlcov

build:
  image: python:3.8-alpine
  stage: build
  before_script:
    - pip install docutils
  script:
    - python setup.py sdist
  artifacts:
    paths:
      - dist/*

deploy_pypi:
  image: python:3.8-alpine
  stage: deploy
  only:
    variables:
      # Only verify the deploy if it's a version tag.
      - $CI_COMMIT_TAG =~ /^v.*/
  before_script:
    - 'pip install twine'
    - './create-pypirc.sh'
  script:
    # Upload to the test PyPi instance, then upload to the real one.
    - twine upload -r pypi_test dist/*
    - twine upload dist/*
  after_script:
    - echo "" > ~/.pypirc && rm -f ~/.pypirc

verify_deploy:
  image: python:3.8-alpine
  stage: verify
  only:
    variables:
      # Only verify the deploy if it's a version tag.
      - $CI_COMMIT_TAG =~ /^v.*/
  script:
    - pip install tracktime

publish_release:
  image: alpine
  stage: release
  only:
    variables:
      # Only verify the deploy if it's a version tag.
      - $CI_COMMIT_TAG =~ /^v.*/
  before_script:
    - apk add bash curl
  script:
    - ./cicd/publish-gitlab-release.sh
